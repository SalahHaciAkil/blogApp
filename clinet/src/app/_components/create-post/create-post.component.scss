@use '../../../custom_style/global_variable' as *;
@use '../../../custom_style/_mixin' as *;
@import '../../../custom_style/custome_buttons';

section{
  @include section_margin_top;
}
.editor{
    height: 400px;
    margin-bottom: 80px;
}

svg{
    height: 40px;
}

.craetePost{
    background-color: lavender;
}
/* default and hover color */
::ng-deep .mat-form-field-appearance-outline .mat-form-field-outline {
    color: $primary;
}
::ng-deep .mat-form-field-outline .mat-form-field-outline {
    color: $primary;
}

/* focused color */
::ng-deep .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick {
    color: $primary;
}

/* floating label color */
::ng-deep .mat-form-field-appearance-outline.mat-focused .mat-form-field-label { 
    color: $primary; 
}
::ng-deep .mat-input-element {
    color: rgb(0, 0, 0);
  }


button{
    font-size: 1.5rem;

}

.labelUploader{
    background-color: #e0e0e0;
    height: 25rem;
    cursor: pointer;


    .imageBx{
        height: 24.8rem;
        img{
            height: 100%;
            width: 100%;
        }
    }

    .text{
        display: flex;
        justify-content: center;
        align-items: center;

        p{
            margin: auto 0;
        }
    }




    span{
        font-size: 5rem;
    }
    
}

input[type="file"]{
    display: none;
}

// .ql-editor{
//     font-size: 40px !important;
// }


/*
  https://developer.mozilla.org/en/docs/Web/CSS/box-shadow
  box-shadow: [inset?] [top] [left] [blur] [size] [color];

  Tips:
    - We're setting all the blurs to 0 since we want a solid fill.
    - Add the inset keyword so the box-shadow is on the inside of the element
    - Animating the inset shadow on hover looks like the element is filling in from whatever side you specify ([top] and [left] accept negative values to become [bottom] and [right])
    - Multiple shadows can be stacked
    - If you're animating multiple shadows, be sure to keep the same number of shadows so the animation is smooth. Otherwise, you'll get something choppy.
*/

// Animate the size, inside

h1 { font-weight: 400; }


::ng-deep {

    // .mat-form-field-appearance-outline .mat-form-field-outline {
    //    color: rgb(255, 0, 0);
    // }
    .mat-form-field-type-mat-select .mat-form-field-label, .mat-select-value {
        color: rgb(0, 0, 0);
    }

    .mat-form-field {
       .mat-hint, input, ::placeholder, .mat-form-field-label {
          color: rgb(0, 0, 0);
       }
    }
 }
